{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { db, auth } from \"../firebase/config\";\nimport MyCamera from \"./MyCamera\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FormPost = function (_Component) {\n  _inherits(FormPost, _Component);\n  var _super = _createSuper(FormPost);\n  function FormPost() {\n    var _this;\n    _classCallCheck(this, FormPost);\n    _this = _super.call(this);\n    _this.state = {\n      owner: '',\n      text: '',\n      likes: [],\n      comentarios: [],\n      createdAt: '',\n      url: '',\n      error: ''\n    };\n    return _this;\n  }\n  _createClass(FormPost, [{\n    key: \"crearPost\",\n    value: function crearPost() {\n      var _this2 = this;\n      if (this.state.text != '' || this.state.url != '') {\n        db.collection('posts').add({\n          owner: auth.currentUser.email,\n          text: this.state.text,\n          likes: this.state.likes,\n          comments: this.state.comentarios,\n          photo: this.state.url,\n          createdAt: Date.now()\n        }).then(function (res) {\n          _this2.setState({\n            owner: '',\n            text: '',\n            likes: [],\n            comentarios: [],\n            createdAt: '',\n            url: '',\n            error: ''\n          });\n        }).catch(function (error) {\n          console.log(error);\n          _this2.setState({\n            error: error.message\n          });\n        });\n      } else {\n        this.state.text == '' ? this.setState({\n          error: 'El texto no puede estar vacio'\n        }) : this.setState({\n          error: 'Debe tener una imagen'\n        });\n      }\n    }\n  }, {\n    key: \"onImageUpload\",\n    value: function onImageUpload(url) {\n      this.setState({\n        url: url\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return _jsx(View, {\n        style: styles.container,\n        children: this.state.url == '' ? _jsx(MyCamera, {\n          onImageUpload: function onImageUpload(url) {\n            return _this3.onImageUpload(url);\n          }\n        }) : _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.titulo,\n            children: \"Add post\"\n          }), _jsxs(View, {\n            stryle: styles.inputContainer,\n            children: [_jsx(Text, {\n              children: \"Foto seleccionada con exito!\"\n            }), _jsx(TextInput, {\n              placeholder: \"Ingrese el texto del post\",\n              onChangeText: function onChangeText(text) {\n                return _this3.setState({\n                  text: text\n                });\n              },\n              value: this.state.text\n            }), _jsxs(Text, {\n              style: styles.error,\n              children: [\" \", this.state.error, \" \"]\n            })]\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.crearPost();\n            },\n            children: _jsx(Text, {\n              children: \"Crear Post!\"\n            })\n          })]\n        })\n      });\n    }\n  }]);\n  return FormPost;\n}(Component);\nexport default FormPost;\nvar styles = StyleSheet.create({\n  container: {},\n  error: {\n    color: 'red'\n  },\n  titulo: {\n    fontWeight: 'bold',\n    fontFamily: \"'Helvetica', 'Arial', sans-serif;\",\n    fontSize: 40\n  },\n  inputContainer: {\n    backgroundColor: 'black',\n    marginTop: 15\n  }\n});","map":{"version":3,"names":["React","Component","db","auth","MyCamera","FormPost","state","owner","text","likes","comentarios","createdAt","url","error","collection","add","currentUser","email","comments","photo","Date","now","then","res","setState","catch","console","log","message","styles","container","onImageUpload","titulo","inputContainer","crearPost","StyleSheet","create","color","fontWeight","fontFamily","fontSize","backgroundColor","marginTop"],"sources":["C:/Users/User/Desktop/UDESA/PROG III/proyeFinaNative/proyfinal-p3/src/Components/formPost.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet} from 'react-native';\r\nimport {db,auth} from '../firebase/config'\r\nimport MyCamera from './MyCamera';\r\n\r\nclass FormPost extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            owner:'',\r\n            text:'',\r\n            likes:[],\r\n            comentarios:[],\r\n            createdAt:'',\r\n            url:'',\r\n            error:''\r\n        }\r\n    }\r\n   \r\n    crearPost() {\r\n        if (this.state.text != '' || this.state.url != '') \r\n        {\r\n           db.collection('posts').add({\r\n                owner:auth.currentUser.email,\r\n                text:this.state.text,\r\n                likes:this.state.likes,\r\n                comments:this.state.comentarios,\r\n                photo: this.state.url,\r\n                createdAt: Date.now()\r\n            })\r\n            .then(res => {\r\n            this.setState({\r\n                owner:'',\r\n                text:'',\r\n                likes:[],\r\n                comentarios:[],\r\n                createdAt:'',\r\n                url:'',\r\n                error:''\r\n            })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.setState({error:error.message})\r\n            });\r\n        } else\r\n        {\r\n            this.state.text == ''? this.setState({error:'El texto no puede estar vacio'}) : this.setState({error:'Debe tener una imagen'});\r\n        }\r\n          \r\n    }\r\n\r\n    onImageUpload(url){\r\n        this.setState({\r\n            url:url\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View style={styles.container}>\r\n                {\r\n                    this.state.url == '' ? \r\n                    <MyCamera onImageUpload={(url) => this.onImageUpload(url)}/> :\r\n                    <View>\r\n                        <Text style={styles.titulo}>Add post</Text>\r\n                        <View stryle={styles.inputContainer}>\r\n                            <Text>Foto seleccionada con exito!</Text>\r\n                            <TextInput\r\n                                placeholder='Ingrese el texto del post'\r\n                                onChangeText ={text => this.setState( { text:text } \r\n                                    )}\r\n                                value = { this.state.text }\r\n                            />  \r\n                            <Text style={styles.error}> {this.state.error} </Text>\r\n                        </View>\r\n                        <TouchableOpacity onPress={() => this.crearPost()}>\r\n                            <Text>Crear Post!</Text>   \r\n                        </TouchableOpacity>\r\n                    </View>\r\n                }\r\n            </View>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default FormPost\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n    },\r\n    error: {\r\n        color:'red'\r\n    },\r\n    titulo:{\r\n        fontWeight:'bold',\r\n        fontFamily: \"'Helvetica', 'Arial', sans-serif;\",\r\n        fontSize:40\r\n      },\r\n      inputContainer:{\r\n        backgroundColor:'black',\r\n        marginTop:15\r\n      }\r\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module"}