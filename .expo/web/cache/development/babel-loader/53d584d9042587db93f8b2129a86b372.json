{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { db, auth } from \"../firebase/config\";\nimport firebase from 'firebase';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Comments = function (_Component) {\n  _inherits(Comments, _Component);\n  var _super = _createSuper(Comments);\n  function Comments(props) {\n    var _this;\n    _classCallCheck(this, Comments);\n    _this = _super.call(this, props);\n    _this.state = {\n      comments: '',\n      id: _this.props.route.params,\n      post: [],\n      loading1: true\n    };\n    return _this;\n  }\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      db.collection('posts').doc(this.state.id).onSnapshot(function (doc) {\n        _this2.setState({\n          post: doc.data(),\n          loafing1: false\n        });\n      });\n    }\n  }, {\n    key: \"sendComment\",\n    value: function sendComment(comments) {\n      var _this3 = this;\n      db.collection('posts').doc(this.state.id).update({\n        comments: firebase.firestore.FieldValue.arrayUnion({\n          owner: auth.currentUser.email,\n          comments: comments,\n          createdAt: Date.now()\n        })\n      }).then(function () {\n        _this3.setState({\n          comments: ''\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      return _jsx(View, {\n        children: this.state.loading1 === true ? _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"green\"\n        }) : this.state.post.comments.length === 0 ? _jsx(Text, {\n          children: \"no hay comentarios\"\n        }) : _jsxs(View, {\n          children: [_jsx(FlatList, {\n            data: this.state.post.comments,\n            keyExtractor: function keyExtractor(unComentario) {\n              return unComentario.createdAt.toString();\n            },\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(_Fragment, {\n                children: [\" \", _jsxs(Text, {\n                  children: [\" \", item.owner, \" \"]\n                }), \" \", _jsx(Text, {\n                  children: item.comments\n                }), \" \"]\n              });\n            }\n          }), _jsxs(View, {\n            children: [_jsx(TextInput, {\n              placeholder: \"Comentario\",\n              keyboardType: \"default\",\n              onChangeText: function onChangeText(text) {\n                return _this4.setState({\n                  comments: text\n                });\n              },\n              value: this.state.comments\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return _this4.sendComment(_this4.state.comments);\n              },\n              children: _jsx(Text, {\n                children: \"Comentar\"\n              })\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n  return Comments;\n}(Component);\nexport default Comments;","map":{"version":3,"names":["React","Component","db","auth","firebase","Comments","props","state","comments","id","route","params","post","loading1","collection","doc","onSnapshot","setState","data","loafing1","update","firestore","FieldValue","arrayUnion","owner","currentUser","email","createdAt","Date","now","then","length","unComentario","toString","item","text","sendComment"],"sources":["C:/Users/User/Desktop/UDESA/PROG III/proyeFinaNative/proyfinal-p3/src/screens/Comments.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, Image, TextInput, TouchableOpacity} from 'react-native';\r\nimport { db, auth } from '../firebase/config';\r\nimport firebase from 'firebase';\r\nimport { ActivityIndicator, FlatList } from 'react-native-web';\r\n\r\nclass Comments extends Component{\r\n    constructor (props) {\r\n        super(props)\r\n        this.state={\r\n            comments: '',\r\n            id: this.props.route.params,\r\n            post: [],\r\n            loading1: true\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n    db.collection('posts').doc(this.state.id).onSnapshot(\r\n        doc => {\r\n            this.setState({\r\n                post: doc.data(),\r\n                loafing1:false\r\n            })\r\n        }\r\n    )\r\n}\r\n\r\nsendComment(comments) {\r\n    db.collection('posts')\r\n        .doc(this.state.id) \r\n        .update({\r\n            comments: firebase.firestore.FieldValue.arrayUnion({\r\n                owner: auth.currentUser.email,\r\n                comments: comments,\r\n                createdAt: Date.now()\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.setState({\r\n                comments: ''\r\n            })\r\n        })\r\n}\r\n\r\nrender() {\r\n    return (\r\n        <View>\r\n            {this.state.loading1 === true ? <ActivityIndicator size='large' color='green' /> :\r\n            this.state.post.comments.length === 0 ? <Text>no hay comentarios</Text> \r\n            : \r\n                <View> \r\n                <FlatList data={this.state.post.comments} keyExtractor={unComentario=> unComentario.createdAt.toString()} renderItem={({ item }) => <> <Text> {item.owner} </Text> <Text>{item.comments}</Text> </> } />\r\n            \r\n                <View>\r\n\r\n                    <TextInput\r\n                        placeholder='Comentario'\r\n                        keyboardType='default'\r\n                        onChangeText={text => this.setState({ comments: text })}\r\n                        value={this.state.comments}\r\n                    />\r\n                    <TouchableOpacity onPress={() => this.sendComment(this.state.comments)}>\r\n                        <Text>Comentar</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n         }\r\n        </View>\r\n    )\r\n\r\n}\r\n}\r\n\r\nexport default Comments\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}